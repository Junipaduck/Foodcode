<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.foodcode.mapper.StoreMapper">


	<!-- 새로운 가게 등록 작업을 위한 <insert>태그 -->
	 <insert id="insertStore">
	 
	 	<selectKey keyProperty="store_idx" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(store_idx), 0) FROM store 
 		</selectKey>

 		
	 	INSERT
	 		INTO store
	 		VALUES (
	 			#{store_idx} + 1
	 			,#{store_name} 
	 			,#{store_phone} 
<!-- 	 			,#{store_address}   -->
				,CONCAT(#{store_address1}, ' ', #{store_address2}) <!-- 도로명주소 + 상세주소 결합 -->
	 			,#{store_type}
	 			,#{store_content}
	 			,#{store_time}  
	 			,#{store_license} 
	 			,now()
	 			,#{store_etc}
	 			,#{store_file}
	 			,#{store_file_path}
	 			,#{member_id} <!-- 로그인된 점주의 sId -->
	 			,'N'
	 		)
	 </insert>




	  <!-- 게시물 목록 조회 <select> 태그 -->
		 <select id="selectStoreList" resultType="com.itwillbs.foodcode.vo.StoreVO">
<!-- 		 	SELECT * -->
<!-- 		 		FROM store -->
<!-- 		 		<if test="!searchKeyword.equals('')"> 서치키워드가 널스트링이 아닐 때 -->
<!-- 			 		WHERE -->
<!-- 		 			<choose> -->
<!-- 			 			<when test="searchType.equals('store_name')"> -->
<!-- 							store_name LIKE '%${searchKeyword}%' 테이블명, LIKE 절에 사용할때는 ${} 사용, 실제 데이터를 전달할때는 #{}사용 -->
<!-- 						</when> -->
<!-- 						<when test="searchType.equals('store_content')"> -->
<!-- 							store_content LIKE '%${searchKeyword}%' -->
<!-- 						</when> -->
<!-- 						<when test="searchType.equals('store_content_store_name')"> --> 
<!-- 							store_name LIKE '%${searchKeyword}%' --> 
<!-- 							OR store_content LIKE '%${searchKeyword}%' -->
<!-- 						</when> --> 
<!-- 		 			</choose> -->
<!-- 		 		</if> -->
		 		
<!-- 		 		ORDER BY -->
<!-- 		 			store_idx DESC -->
		 			
		 			
		 			
		 				SELECT IFNULL(r.review_star, '0.0') AS review_star
							 , s.*
					 		FROM store s
					 		LEFT JOIN (SELECT r.store_idx 
		 		  	     	  , ROUND(AVG(r.review_star), 1) AS review_star
			 		  	        FROM review r 
			 		  	    	  GROUP BY r.store_idx) r
			 					  ON s.store_idx = r.store_idx
					 		<if test="!searchKeyword.equals('')"> <!-- 서치키워드가 널스트링이 아닐 때 -->
						 		WHERE
					 			<choose>
						 			<when test="searchType.equals('store_name')">
										store_name LIKE '%${searchKeyword}%' <!-- 테이블명, LIKE 절에 사용할때는 ${} 사용, 실제 데이터를 전달할때는 #{}사용 -->
									</when>
									<when test="searchType.equals('store_content')">
										store_content LIKE '%${searchKeyword}%'
									</when>
					 			</choose>
					 		</if>
					 		
					 		ORDER BY
					 			store_idx DESC
		 			
	 	 </select>
	 	 
	 	 <select id="selectStoreList1" resultType="com.itwillbs.foodcode.vo.StoreVO">
<!-- 		 	SELECT * -->
<!-- 		 		FROM store -->
<!-- 		 		WHERE store_type = '한식' AND auth_status = 'Y' -->
<!-- 		 		ORDER BY store_idx DESC; -->
		 		
			SELECT IFNULL(r.review_star, '0.0') AS review_star
					 , s.*
		 		FROM store s
		 		LEFT JOIN (SELECT r.store_idx 
		 		  	     	  , ROUND(AVG(r.review_star), 1) AS review_star
		 		  	       FROM review r 
		 		  	      GROUP BY r.store_idx) r
		 		  ON s.store_idx = r.store_idx
		 		WHERE 1=1
 		 		  AND store_type = '한식' 
		 		  AND auth_status = 'Y'
		 		ORDER BY store_idx DESC
		 	;
	 	 </select>
	 	 
	 	 <select id="selectStoreList2" resultType="com.itwillbs.foodcode.vo.StoreVO">
		 	SELECT IFNULL(r.review_star, '0.0') AS review_star
					 , s.*
		 		FROM store s
		 		LEFT JOIN (SELECT r.store_idx 
		 		  	     	  , ROUND(AVG(r.review_star), 1) AS review_star
		 		  	       FROM review r 
		 		  	      GROUP BY r.store_idx) r
		 		  ON s.store_idx = r.store_idx
		 		WHERE 1=1
 		 		  AND store_type = '일식' 
		 		  AND auth_status = 'Y'
		 		ORDER BY store_idx DESC
		 	;
	 	 </select>
	 	 
	 	 <select id="selectStoreList3" resultType="com.itwillbs.foodcode.vo.StoreVO">
		 	SELECT IFNULL(r.review_star, '0.0') AS review_star
					 , s.*
		 		FROM store s
		 		LEFT JOIN (SELECT r.store_idx 
		 		  	     	  , ROUND(AVG(r.review_star), 1) AS review_star
		 		  	       FROM review r 
		 		  	      GROUP BY r.store_idx) r
		 		  ON s.store_idx = r.store_idx
		 		WHERE 1=1
 		 		  AND store_type = '중식' 
		 		  AND auth_status = 'Y'
		 		ORDER BY store_idx DESC
		 	;
	 	 </select>
	 	 
	 	 <select id="selectStoreList4" resultType="com.itwillbs.foodcode.vo.StoreVO">
		 	SELECT IFNULL(r.review_star, '0.0') AS review_star
					 , s.*
		 		FROM store s
		 		LEFT JOIN (SELECT r.store_idx 
		 		  	     	  , ROUND(AVG(r.review_star), 1) AS review_star
		 		  	       FROM review r 
		 		  	      GROUP BY r.store_idx) r
		 		  ON s.store_idx = r.store_idx
		 		WHERE 1=1
 		 		  AND store_type = '양식' 
		 		  AND auth_status = 'Y'
		 		ORDER BY store_idx DESC
		 	;
	 	 </select>
	 	 
	 	 <select id="selectStoreList5" resultType="com.itwillbs.foodcode.vo.StoreVO">
		 	SELECT IFNULL(r.review_star, '0.0') AS review_star
					 , s.*
		 		FROM store s
		 		LEFT JOIN (SELECT r.store_idx 
		 		  	     	  , ROUND(AVG(r.review_star), 1) AS review_star
		 		  	       FROM review r 
		 		  	      GROUP BY r.store_idx) r
		 		  ON s.store_idx = r.store_idx
		 		WHERE 1=1
 		 		  AND store_type = '요리주점' 
		 		  AND auth_status = 'Y'
		 		ORDER BY store_idx DESC
		 	;
	 	 </select>
	
		<select id="selectStoreList6" resultType="com.itwillbs.foodcode.vo.StoreVO">
		 	SELECT IFNULL(r.review_star, '0.0') AS review_star
					 , s.*
		 		FROM store s
		 		LEFT JOIN (SELECT r.store_idx 
		 		  	     	  , ROUND(AVG(r.review_star), 1) AS review_star
		 		  	       FROM review r 
		 		  	      GROUP BY r.store_idx) r
		 		  ON s.store_idx = r.store_idx
		 		WHERE 1=1
 		 		  AND store_type = '카페/디저트' 
		 		  AND auth_status = 'Y'
		 		ORDER BY store_idx DESC
		 	;
	 	 </select>

		<!-- 가게 상세페이지 1개 조회용 -->
		<select id="selectStoreInfo" resultType="com.itwillbs.foodcode.vo.StoreVO">
			SELECT *
				FROM store
				WHERE store_idx = ${store_idx}
		</select>


		<!-- 가게 전체 조회 -->
		<select id="selectStoreListAll" resultType="com.itwillbs.foodcode.vo.StoreVO">
			SELECT 
				s.store_name 
				, s.store_content
				, IFNULL(ROUND(AVG(r.review_star)), '0.0') as review_star
					FROM store s JOIN review r
					ON s.store_idx = r.store_idx
				WHERE r.review_star > 3
				GROUP BY s.store_idx;
		</select>

		
		
		<!-- 글 목록 총 갯수 조회 (페이징 카운트)-->
		<select id="selectStoreListCount" resultType="int">
			SELECT COUNT(*)
				FROM store 
				<if test="!searchKeyword.equals('')">
					WHERE
					<choose>
						<when test="searchType.equals('content')">
							store_name LIKE CONCAT('%', #{searchKeyword}, '%')
						</when>
					</choose>
				</if>
		</select>
		
		<select id="getStoreInfo" resultType="com.itwillbs.foodcode.vo.StoreVO">
			SELECT *
				FROM store
		</select>
		
		<select id="selectStoreReviewList" resultType="com.itwillbs.foodcode.vo.ReviewVO">
			SELECT
				r.review_idx
				, r.member_id
				, s.store_name
				, r.review_content
				, r.review_file
				, r.review_star
				, r.review_date 
				FROM 
					review r JOIN store s 
				ON 
					r.store_idx = s.store_idx
				WHERE 
					s.store_idx = #{store_idx}
		</select>
		
	<!-- 점주 회원 판단  - 답글 작성 -->
	<select id="selectStoreOwner" resultType="int">
		SELECT COUNT(*)
			FROM store s JOIN review r
			ON s.store_idx = r.store_idx
			WHERE s.member_id = #{id} AND s.store_idx = #{store_idx}
	</select>
</mapper>



	 
	 
