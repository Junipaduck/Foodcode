<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.foodcode.mapper.AdminMapper">
	
	<select id="selectMemberList" resultType="com.itwillbs.foodcode.vo.MemberVO">
		SELECT *
			FROM member
				WHERE member_type = 'c' AND member_id != 'admin';
	</select>
	
	<select id="selectOwnerList" resultType="com.itwillbs.foodcode.vo.MemberVO">
		SELECT *
			FROM member
				WHERE member_type = 'o';
	</select>
	
	<delete id="deleteMember">
		DELETE member, store, booking, review, pay
            FROM member 
                LEFT JOIN booking 
                    ON member.member_id = booking.member_id
                LEFT JOIN review
                    ON member.member_id = review.member_id
                LEFT JOIN pay 
                    ON member.member_id = pay.member_id
                LEFT JOIN store 
                	ON MEMBER.member_id = store.member_id 
            WHERE (member.member_idx = #{member_idx} AND member.member_id = #{member_id}) AND member.member_type = #{member_type};
	</delete>
	
	<select id="selectStoreList" resultType="com.itwillbs.foodcode.vo.StoreVO">
		SELECT *
			FROM store;
	</select>
	
<!-- 	<select id="selectReviews" resultType="com.itwillbs.foodcode.vo.ReviewVO"> -->
<!-- 		SELECT * -->
<!-- 			FROM review -->
<!-- 	</select> -->
	
	<select id="getStoreList2" resultType="map">
	SELECT 
		m.member_id ,
		m.member_email ,
		s.store_name ,
		s.store_idx ,
		s.store_license ,
		s.report_mail_count,
		count(rep.report_count) AS report_count
			FROM report rep 
				JOIN store s ON rep.store_idx = s.store_idx 
					JOIN member m ON m.member_id = s.member_id
		GROUP BY s.store_idx
		HAVING count(rep.report_count) >= 1;
	</select>
	
	<delete id="deleteStore">
		DELETE store, booking, review, menu, report
			FROM store 
				LEFT JOIN booking 
					ON store.store_idx = booking.store_idx
				LEFT JOIN review
					ON store.store_idx = review.store_idx
				LEFT JOIN menu 
					ON store.store_idx = menu.store_idx
				LEFT JOIN report 
					ON store.store_idx = report.store_idx
		WHERE store.store_license = #{store_license} AND store.member_id = #{owner_id}	
	
<!-- 	DELETE -->
<!-- 	 FROM store -->
<!-- 	 	WHERE store_license = #{store_license} AND member_id = #{owner_id} -->
	</delete>
	
	
	<select id="getMemberCount" resultType="String">
		SELECT COUNT(*) FROM member
			WHERE member_type = 'C';
	</select>
	
	<select id="getOwnerCount" resultType="String">
		SELECT COUNT(*) FROM member
			WHERE member_type = 'O';
	</select>
	
	<select id="getStoreCount" resultType="String">
		SELECT COUNT(*) FROM store;
	</select>
	
	<select id="getNoticeCount" resultType="String">
		SELECT COUNT(*) FROM notice;
	</select>
	
	<select id="getReportCount" resultType="String">
		SELECT COUNT(*) FROM report;
	</select>
	
	<select id="getReviewCount" resultType="String">
		SELECT COUNT(*) FROM review
			WHERE delete_auth_status = 'Y';
	</select>
	
	<select id="getNoApprove" resultType="map">
		SELECT m.member_id, s.store_name, s.store_license, s.store_type , s.store_date, s.auth_status
		FROM member m
			JOIN store s ON m.member_id = s.member_id
				WHERE s.auth_status = 'N'
				ORDER BY s.store_date ASC;
	</select>
	
	<update id="updateStoreApprove">
		UPDATE store 
 			SET auth_status = 'Y'
 				WHERE store_license = ${store_license};
	</update>
	
	<delete id="deleteReportCount">
		DELETE FROM report 
				WHERE store_idx = ${store_idx};
	</delete>
	
	<select id="getReviewList" resultType="map">
		SELECT r.review_idx, s.store_name, r.review_content, r.review_star, r.member_id, r.review_file, r.review_report
			FROM review r
				JOIN store s ON r.store_idx = s.store_idx
					WHERE r.delete_auth_status = 'Y'
						ORDER BY review_idx DESC;
	</select>
	
	<delete id="deleteReview">
		DELETE FROM review 
				WHERE review_idx = ${review_idx};
	</delete>
	
	<update id="addReportCount">
		UPDATE store 
 			SET report_mail_count = report_mail_count + 1
 				WHERE store_idx = ${store_idx};
	</update>
	
	<select id="reverseMemberList" resultType="com.itwillbs.foodcode.vo.MemberVO">
		SELECT *
			FROM member
				WHERE member_type = 'c'
					ORDER BY member_idx DESC;
	
	</select>
	
	<select id="reverseOwnerList" resultType="com.itwillbs.foodcode.vo.MemberVO">
		SELECT *
			FROM member
				WHERE member_type = 'o'
					ORDER BY member_idx DESC;
	</select>
	
	<select id="reverseStoreList" resultType="com.itwillbs.foodcode.vo.StoreVO">
		SELECT *
			FROM store
				ORDER BY store_idx DESC;
	</select>
	
</mapper>






















































